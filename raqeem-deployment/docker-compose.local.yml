version: '3.8'

secrets:
  postgres_user:
    file: ./secrets/postgres_user.txt
  postgres_password:
    file: ./secrets/postgres_password.txt
  better_auth_secret:
    file: ./secrets/better_auth_secret.txt
  database_url:
    file: ./secrets/database_url.txt

services:
  postgres:
    image: postgres:18-alpine
    environment:
      POSTGRES_DB: raqeem_local
      POSTGRES_USER_FILE: /run/secrets/postgres_user
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
    secrets:
      - postgres_user
      - postgres_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - raqeem-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$(cat /run/secrets/postgres_user)"]
      interval: 10s
      timeout: 5s
      retries: 5

  raqeem-backend:
    image: raqeem-backend:local
    build:
      context: ..
      dockerfile: apps/raqeem-backend/Dockerfile
    environment:
      NODE_ENV: development
      PORT: 4000
      CORS_ORIGIN: ${CORS_ORIGIN:-http://localhost:4001}
      BETTER_AUTH_URL: ${BETTER_AUTH_URL:-http://localhost:4000}
      RUN_MIGRATIONS: ${RUN_MIGRATIONS:-false}
      DATABASE_URL_FILE: /run/secrets/database_url
      BETTER_AUTH_SECRET_FILE: /run/secrets/better_auth_secret
    secrets:
      - database_url
      - better_auth_secret
    ports:
      - "4000:4000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - raqeem-network

  raqeem-frontend:
    image: raqeem-frontend:local
    build:
      context: ..
      dockerfile: apps/raqeem-frontend/Dockerfile
      args:
        NEXT_PUBLIC_SERVER_URL: ${NEXT_PUBLIC_SERVER_URL:-http://localhost:4000}
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_SERVER_URL: ${NEXT_PUBLIC_SERVER_URL:-http://localhost:4000}
    ports:
      - "4001:3000"
    depends_on:
      - raqeem-backend
    networks:
      - raqeem-network

networks:
  raqeem-network:
    driver: bridge

volumes:
  postgres_data:
